Map {
  0 => node {
    id: 0,
    connections: [ 2 ],
    latency: 1000,
    nodeMap: Map {},
    dataSlice:
     Map {
       0 => [Object],
       1 => [Object],
       2 => [Object],
       3 => [Object],
       4 => [Object] },
    dataRange: [ 0, 4 ],
    processPayload: [Function] },
  1 => node {
    id: 1,
    connections: [ 2 ],
    latency: 1000,
    nodeMap: Map {},
    dataSlice:
     Map {
       5 => [Object],
       6 => [Object],
       7 => [Object],
       8 => [Object],
       9 => [Object] },
    dataRange: [ 5, 9 ],
    processPayload: [Function] },
  2 => node {
    id: 2,
    connections: [ 8, 1 ],
    latency: 1000,
    nodeMap: Map {},
    dataSlice:
     Map {
       10 => [Object],
       11 => [Object],
       12 => [Object],
       13 => [Object],
       14 => [Object] },
    dataRange: [ 10, 14 ],
    processPayload: [Function] },
  3 => node {
    id: 3,
    connections: [ 0, 9 ],
    latency: 1000,
    nodeMap: Map {},
    dataSlice:
     Map {
       15 => [Object],
       16 => [Object],
       17 => [Object],
       18 => [Object],
       19 => [Object] },
    dataRange: [ 15, 19 ],
    processPayload: [Function] },
  4 => node {
    id: 4,
    connections: [ 8 ],
    latency: 1000,
    nodeMap: Map {},
    dataSlice:
     Map {
       20 => [Object],
       21 => [Object],
       22 => [Object],
       23 => [Object],
       24 => [Object] },
    dataRange: [ 20, 24 ],
    processPayload: [Function] },
  5 => node {
    id: 5,
    connections: [ 3, 0 ],
    latency: 1000,
    nodeMap: Map {},
    dataSlice:
     Map {
       25 => [Object],
       26 => [Object],
       27 => [Object],
       28 => [Object],
       29 => [Object] },
    dataRange: [ 25, 29 ],
    processPayload: [Function] },
  6 => node {
    id: 6,
    connections: [ 1, 3 ],
    latency: 1000,
    nodeMap: Map {},
    dataSlice:
     Map {
       30 => [Object],
       31 => [Object],
       32 => [Object],
       33 => [Object],
       34 => [Object] },
    dataRange: [ 30, 34 ],
    processPayload: [Function] },
  7 => node {
    id: 7,
    connections: [ 5, 8 ],
    latency: 1000,
    nodeMap: Map {},
    dataSlice:
     Map {
       35 => [Object],
       36 => [Object],
       37 => [Object],
       38 => [Object],
       39 => [Object] },
    dataRange: [ 35, 39 ],
    processPayload: [Function] },
  8 => node {
    id: 8,
    connections: [ 5, 6 ],
    latency: 1000,
    nodeMap: Map {},
    dataSlice:
     Map {
       40 => [Object],
       41 => [Object],
       42 => [Object],
       43 => [Object],
       44 => [Object] },
    dataRange: [ 40, 44 ],
    processPayload: [Function] },
  9 => node {
    id: 9,
    connections: [ 4, 2 ],
    latency: 1000,
    nodeMap: Map {},
    dataSlice:
     Map {
       45 => [Object],
       46 => [Object],
       47 => [Object],
       48 => [Object],
       49 => [Object] },
    dataRange: [ 45, 49 ],
    processPayload: [Function] } }
node id 7 found node of id 5
node id 7 found node of id 3
node id 7 found node of id 0
node id 7 found node of id 2
node id 7 found node of id 8
node id 7 found node of id 6
node id 7 found node of id 1
node id 7 found node of id 9
node id 7 found node of id 4
0.957
Hello from node 5
Map {
  5 => { distance: undefined, visited: false, path: [] },
  3 => { distance: undefined, visited: false, path: [] },
  0 => { distance: undefined, visited: false, path: [] },
  2 => { distance: undefined, visited: false, path: [] },
  8 => { distance: undefined, visited: false, path: [] },
  6 => { distance: undefined, visited: false, path: [] },
  1 => { distance: undefined, visited: false, path: [] },
  9 => { distance: undefined, visited: false, path: [] },
  4 => { distance: undefined, visited: false, path: [] } }
shortest path to target is: 